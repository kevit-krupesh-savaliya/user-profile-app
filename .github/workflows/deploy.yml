name: deploy to production

on:

  push:
    branches: [ master ]

jobs:
  build:

    name: Build Image
    runs-on: ubuntu-latest


    steps:

      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run test cases
        run: |
          - pip install -r requirements.txt
          - python manage.py makemigations
          - python manage.py migrate
          - python manage.py test
        env:
          DEBUG: False
          SECRET_KEY: test
          ALLOWED_HOSTS: localhost
          AWS_SECRET_NAME: False
          AWS_REGION_NAME: False
          AWS_SECRET_ACCESS_KEY: False
          AWS_ACCESS_KEY_ID: False

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: default-poc
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG